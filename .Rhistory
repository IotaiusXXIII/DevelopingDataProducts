names(training) = "Diagnosis"
a <- grep("Diagnosis" & "^IL", names(training))
a <- grep("Diagnosis" | "^IL", names(training))
help(grep)
a <- grepl("Diagnosis" | "^IL", names(training))
a <- grep(c("Diagnosis", "^IL"), names(training))
a <- grep("^IL" names(training))
names(trainig)
names(training)
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
names(training)
help(which)
which(names(training) == "Diagnosis")
names(training)[names(training) == "Diagnosis"]
names(training)
names(training)[names(training) == "diagnosis"]
help(index)
which(names(training) == "diagnosis")
c(which(names(training) == "diagnosis"), names(training)[a])
c(which(names(training) == "diagnosis") + names(training)[a])
a <- grep("^IL", names(training))
c(which(names(training) == "diagnosis"), names(training)[a])
c("diagnosis", names(training)[a])
pca <- prcomp(testing[,c("diagnosis", names(training)[a])])
pca <- prcomp(training[,c("diagnosis", names(training)[a])])
trening <- training[,c("diagnosis", names(training)[a])]
pca <- prcomp(trening)
preproces <- preProcess(training[,c("diagnosis", names(training)[a])],
method = "pca", thresh = 0.8)
preproces <- preProcess(training[,c("diagnosis", names(training)[a])],
method = "pca", thresh = 0.8)
preproces <- preProcess(training[,names(training)[a]],
method = "pca", thresh = 0.8)
tr <- predict(preproces, training[,names(training)[a]])
trening <- training[,c("diagnosis", names(training)[a])]
View(trening)
View(training)
View(trening)
trening <- trening[, -1]
View(trening)
trening <- training[,c("diagnosis", names(training)[a])]
row.names(trening) <- NULL
View(trening)
preproces <- preProcess(trening[,-1],
method = "pca", thresh = 0.8)
tr <- predict(preproces, trening[,-1])
b <- train(trening[,"diagnosis"] ~., method = "glm")
preproces <- preProcess(trening[,-1],
method = "pca", thresh = 0.8)
tr <- predict(preproces, trening[,-1])
b <- train(trening$diagnosis ~., method = "glm")
b <- train(trening$diagnosis ~., method = "glm", data = trening)
b <- train(trening$diagnosis ~., method = "glm", data = tr)
model <- train(trening$diagnosis ~., method = "glm", data = tr)
colnames(testing)
test <- predict(preproces, testing[,a])
confusionMatrix(testing$diagnosis, predict(model, test))
model <- train(trening$diagnosis ~., method = "pca", data = trening)
test <- predict(preproces, testing[,a])
confusionMatrix(testing$diagnosis, predict(model, test))
pr <- prcomp(adData[,c("diagnosis", a)])
a <- grep("^IL", names(adData))
pr <- prcomp(adData[,c("diagnosis", a)])
a <- grep("^IL", names(training))
g <- adData[,c("diagnosis", grep("^IL", names(adData)))]
grep("^IL", names(adData))
g <- adData[,c("diagnosis", names(adData)[,grep("^IL", names(adData))]]
names(adData)[,grep("^IL", names(adData))]
g <- adData[,c("diagnosis", names(adData)[grep("^IL", names(adData))]]
grep("^IL", names(adData))
g <- adData[,c("diagnosis", names(adData)[grep("^IL", names(adData))])]
g <- adData[,c("diagnosis", names(adData)[grep("^IL", names(adData))])]
row.names(g) <- NULL
pr <- prcomp(adData[,-1])
View(g)
pr <- prcomp(g[,-1])
pr$rotation
model1 <- train(g$diagnosis ~., method = "glm", data = g)
test <- predict(model1, g[,a])
test <- predict(model1, g[,-1])
confusionMatrix(g$diagnosis, predict(model1, test))
model1
model <- train(trening$diagnosis ~., method = "glm", data = trening)
test <- predict(preproces, testing[,a])
confusionMatrix(testing$diagnosis, predict(model, test))
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
a <- grep("^IL", names(training))
trening <- training[,c("diagnosis", names(training)[a])]
pca <- prcomp(trening)
trening <- training[,c("diagnosis", names(training)[a])]
row.names(trening) <- NULL
preproces <- preProcess(trening[,-1],
method = "pca", thresh = 0.8)
tr <- predict(preproces, trening[,-1])
model <- train(trening$diagnosis ~., method = "glm", data = tr)
test <- predict(preproces, testing[,a])
confusionMatrix(testing$diagnosis, predict(model, test))
pr <- prcomp(adData[,c("diagnosis", a)])
g <- adData[,c("diagnosis", names(adData)[grep("^IL", names(adData))])]
row.names(g) <- NULL
model <- train(trening$diagnosis ~., method = "glm", data = trening)
test <- predict(preproces, testing[,a])
confusionMatrix(testing$diagnosis, predict(model, test))
model1 <- train(trening$diagnosis ~., method = "glm", data = trening)
test <- predict(model1, testing[,a])
confusionMatrix(testing$diagnosis, predict(model1, test))
View(trening)
confusionMatrix(testing$diagnosis, predict(model1, testing))
confusionMatrix(testing$diagnosis, test)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
lm1 <- lm(y~x)
summary(lm1
)
help(mtcars)
f <- data(mtcars)
f <- data(mtcars)
lm2 <- lm(f$mpg ~ f$wt)
data(mtcars)
data <- data(mtcars)
data
data <- data(mtcars)
lm2 <- lm(data$mpg ~ data$wt)
data(mtcars)
data <- data(mtcars)
lm2 <- lm(data$mpg ~ data$wt)
data(mtcars)
mtcars
data(mtcars)
data <- data(mtcars)
lm2 <- lm(data$mpg ~ data$wt)
summary(lm2)
lm2 <- lm(mtcars$mpg ~ mtcars$wt)
summary(lm2)
mean(mtcars$wt)
lm2 <- lm(mtcars$mpg ~ mtcars$wt)
su <- summary(lm2)
su[1,1]
lm2 <- lm(mtcars$mpg ~ mtcars$wt)
su <- summary(lm2)
su[1,1]
suc[1,1] + c(-1, 1) * qt(0.975, df = su$df) * suc[1,2]
suc <- su$coefficients
suc[1,1] + c(-1, 1) * qt(0.975, df = su$df) * suc[1,2]
suc[1,1]
suc[1,1] + c(-1, 1) * qt(0.975, df = su$df) * suc[1,2]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = su$df) * mean(mtcars$wt)
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
mean(mtcars$wt) + c(-1, 1) * qt(0.975) * mean(mtcars$wt)
help(qt)
mean(mtcars$wt) + c(-1, 1) * qt(0.975 df = lm2$df) * mean(mtcars$wt)
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
help(lm)
lm2$coefficients
lm2$coefficients[2]
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
lm2$coefficients[2,1]
lm2$coefficients[1,2]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[1]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
su$coefficients[1,1] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * su$coefficients[1,1]
su
3000 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * 3
3 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
mean(mtcars$wt) + c(-1, 1) * qt(0.975, df = lm2$df) * su$coefficients[1,1]
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[1]
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
c(-1, 1) * qt(0.975, df = lm2$df) * mean(mtcars$wt)
c(-1, 1) * qt(0.975, df = lm2$df) * 3
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * 3
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * 3
lm2$coefficients[1 + c(-1, 1) * qt(0.975, df = lm2$df) * 3
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * 3
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * 3
mean(mtcars$wt)
lm2$coefficients[1] + c(-1, 1) * qt(0.975, df = lm2$df) * 3000
lm2$coefficients[2] + c(-1, 1) * qt(0.975, df = lm2$df) * 3000
3 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
2 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
predict(lm2 , newdata = data.frame(mtcars$wt=mean(mtcars$wt)), interval="predict")
newdata <- data.frame(mtcars$wt=mean(mtcars$wt)),
predict(lm2 , newdata = newdata, interval="predict")
newdata <- data.frame(mtcars$wt=mean(mtcars$wt))
newdata <- data.frame(mtcars$wt = mean(mtcars$wt))
newdata <- data.frame(mtcars$wt == mean(mtcars$wt))
predict(lm2 , newdata = newdata, interval="predict")
predict(lm2 , newdata = mean(mtcars$wt), interval="predict")
predict(lm2 , newdata = mean(mtcars$wt), interval="confidence")
predict(lm2 , newdata = 3, interval="confidence")
View(newdata)
newdata <- data.frame(mtcars$wt = mean(mtcars$wt))
predict(lm2 , newdata = 3, interval="confidence")
newdata <- data.frame(mtcars$wt, mean(mtcars$wt))
View(newdata)
predict(lm2 , newdata = newdata, interval="confidence")
newdata <- data.frame(mtcars$wt = mean(mtcars$wt))
newdata <- data.frame(x = mean(mtcars$wt))
predict(lm2 , newdata = newdata, interval="confidence")
View(newdata)
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
data(mtcars)
lm2 <- lm(mtcars$mpg ~ mtcars$wt)
su <- summary(lm2)
suc <- su$coefficients
2 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[2]
newdata <- data.frame(x = mean(mtcars$wt))
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="predict")
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")[2]
2 + c(-1, 1) * qt(0.975, df = lm2$df) * lm2$coefficients[,2]
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")[,2]
mean(predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")[,2])
predict(lm2 , newdata = data.frame(x = 3000), interval="confidence")
predict(lm2 , newdata = data.frame(x = 2000), interval="confidence")
help(predict)
lm2 <- lm(mpg ~ wt, data = mtcars)
newdata <- data.frame(x = mean(mtcars$wt))
predict(lm2 , newdata = data.frame(x = 2000), interval="confidence")
predict(lm2 , newdata = data.frame(x = 2000), interval="confidence")
View(newdata)
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
View(mtcars)
data(mtcars)
lm2 <- lm(mpg ~ wt, data = mtcars)
summary(lm2)
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
lm2 <- lm(mpg~wt, data = mtcars)
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
lm2 <- lm(mpg ~ wt)
wt <- mtcars$wt
mpg <- mtcars$mpg
lm2 <- lm(mpg ~ wt)
predict(lm2 , newdata = data.frame(x = mean(mtcars$wt)), interval="confidence")
newdata <- data.frame(x = mean(mtcars$wt))
predict(lm2 , newdata = newdata, interval="confidence")
predict(lm2 , newdata, interval="confidence")
av <- mean(mtcars$wt)
newdata <- data.frame(x = av)
View(newdata)
predict(lm2 , newdata, interval="confidence")
predict(lm2, newdata, interval="confidence")
warning()
predict(lm2, av, interval="confidence")
ha <- data.frame(x = av)
predict(lm2, ha, interval="confidence")
ha <- data.frame(x = 3000/1000)
predict(lm2, ha, interval="confidence")
predict(mpg ~ wt, ha, interval="confidence")
predict(lm(mpg ~ wt), ha, interval="confidence")
attach(mtcars)
fit <- lm(mpg ~ wt)
newdata <- data.frame(wt=2000)
predict(fit, newdata, interval="confidence")
newdata <- data.frame(wt=mean(wt))
predict(fit, newdata, interval="confidence")
newdata <- data.frame(wt=3000/1000)
predict(fit, newdata, interval="confidence")
ha <- data.frame(x = 2000/1000)
predict(lm(mpg ~ wt), ha, interval="confidence")
newdata <- data.frame(wt=2000/1000)
predict(fit, newdata, interval="confidence")
newdata <- data.frame(wt=2000)
predict(fit, newdata, interval="confidence")
newdata <- data.frame(wt=3000)
predict(fit, newdata, interval="confidence")
newdata <- data.frame(wt=3000/1000)
predict(fit, newdata, interval="confidence")
resid(lm(mpg ~ wt))
sum(resid(lm(mpg ~ wt)))
37-6
31/37
help(barplot)
install.packages("caret")
library(gmodels)
library(lattice)
library(psych)
library(foreign)
library(vioplot)
library(utils)
library(pROC)
library(caret)
library(rpart)
library(rattle)
library(rpart.plot)
install.packages("gmodels")
install.packages("psych")
install.packages("vioplot")
install.packages("pROC")
install.packages("rattle")
install.packages("rpart.plot")
install.packages("partykit")
install.packages("party")
install.packages("zoo")
library(nlme)
library(lattice)
library(ggplot2)
library(datasets)
library(AppliedPredictiveModeling)
library(caret)
install.packages("AppliedPredictiveModeling")
install.packages("RSQLite")
install.packages("Rmisc")
install.packages("Hmisc")
install.packages("fPortfolio")
install.packages("devtools")
library(RMySQL)
install.packages("RMySQL")
install.packages("shiny")
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
help(reactive)
5/100
0.05/12
a <- c(12)
a*20
rep(a, 20)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
a <- 1000 + rep(NA, 20)
a
a <- c(1000, rep(NA, 20))
a
length(a)
help(data.frame)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
help(foreach)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
help(for)
for(i in 1:20){
print(i)
}
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
b <- c(1:20)
a <- 20
l <- c()
for(i in 1:length(b)){
l[i] <- b[i] * 2
}
l
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
principal_repayment
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
b <- c(1:20)
a <- c(1:20)
l <- c()
for(i in 1:length(b)){
l[i] <- b[i] * a[i]
}
l
b <- c(1:20)
a <- c(1:20)
l <- c()
for(i in 1:length(b)){
l[i] <- b[i] - a[i]
}
l
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
g <- c(1)
g
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
help(round)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
help(data.frame)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
View(adData)
data(mtcars)
mtcars
help(write.csv)
write.csv(mtcars, file = "C:\\Users\\iNejc\\Desktop\\alfa.csv")
help(barplot)
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
shiny::runApp('C:/Users/iNejc/Desktop/predavanja_ostala/coursera/Data_science_specialization_John_Hopkins_University/9Developing_data_product/project/app')
library(devtools)
install_github("slidify", "ramnathv")
install.packages("knitr")
library(slidify)
install_github('slidify', 'ramnathv')
library(slidify)
setwd("C:\\Users\\iNejc\\Desktop\\predavanja_ostala\\coursera\\Data_science_specialization_John_Hopkins_University\\9Developing_data_product\\project\\slides")
library(slidify)
author("app_presentation")
---
---
vhđ
library(knitr)
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
---
---
title       : Shiny app for financial calculations
subtitle    :
author      : Cvörnjek Nejc B.Sc. (Industrial engineering)
job         : Graduate student of industrial engineering and bioinformatics
framework   : io2012        # {io2012, html5slides, shower, dzslides, ...}
highlighter : highlight.js  # {highlight.js, prettify, highlight}
hitheme     : tomorrow      #
widgets     : []            # {mathjax, quiz, bootstrap}
mode        : selfcontained # {standalone, draft}
knit        : slidify::knit2slides
---
## Inspiration
- Finance is my passion
- Very inspirational course INTRODUCTION TO FINANCE on COURSERA offered by UNIVERSITY OF MICHIGAN and I highly recommend it to everyone
- The professor Mr. GAUTAM KAUL is AWESOME
- Bring finance closer to people
---
## Introduction
- PV [currency] Present value
- FV [currency] Future value
- Loan amortization
---
## Mathematical background
Is calculated by equation
$$FV = PV * (1 + r)^n$$
and
$$PV =\frac{FV}{(1 + r)^n}$$
---
## Example
s
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(devtools)
install_github("slidifyLibraries", "ramnathv")
slidify("index.Rmd")
browseURL("index.html")
